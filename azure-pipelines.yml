# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

#trigger:
#- master 

pool:
  vmImage: 'ubuntu-latest'

variables:
- group: dev-cu-vars
- group: common-pipeline-vars
- name: kubernetesNamespace
  value: development
- name: helmConfigName
  value: $(kubernetesNamespace)-$(regionCode)-values

stages:
- stage: buildAndPushContainers

  jobs:
  - job: vars
    steps:
    - task: Bash@3
      inputs:
        targetType: 'inline'
        script: 'git rev-parse --short HEAD'

    # Use the variable
    # "$(sauce)" is replaced by the contents of the `sauce` variable by Azure Pipelines
    # before handing the body of the script to the shell.
    - bash: |
        echo Bash@3

    

  # - job: buildAndPushRRAppServer
  #   steps:
  #   - bash: |
  #       echo dockerHubRepositoryName = $(dockerHubRepositoryName)
  #       git rev-parse --short HEAD
  #       echo building docker image
  #       echo pushing docker image to repo
  #     displayName: 'build and push rr-app-server'

  # - job: buildAndPushRRAdminCMS
  #   steps:
  #   - bash: |
  #       echo dockerHubRepositoryName = $(dockerHubRepositoryName)
  #       git rev-parse --short HEAD
  #       echo building docker image
  #       echo pushing docker image to repo
  #     displayName: 'build and push rr-admin-cms'

  # - job: buildAndPushRRCloudNativeWeb
  #   steps:
  #   - bash: |
  #       echo dockerHubRepositoryName = $(dockerHubRepositoryName)
  #       git rev-parse --short HEAD
  #       echo building docker image
  #       echo pushing docker image to repo
  #     displayName: 'build and push rr-cloud-native-web'

  # - job: buildAndPushRRContentLayer
  #   steps:
  #   - bash: |
  #       echo dockerHubRepositoryName = $(dockerHubRepositoryName)
  #       git rev-parse --short HEAD
  #       echo building docker image
  #       echo pushing docker image to repo
  #     displayName: 'build and push rr-content-layer'