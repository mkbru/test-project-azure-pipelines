# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

#trigger:
#- master 


pool:
  vmImage: 'ubuntu-latest'

variables:
- group: dev-cu-vars
- group: common-pipeline-vars
- name: kubernetesNamespace
  value: development
- name: helmConfigName
  value: $(kubernetesNamespace)-$(regionCode)-values

stages:
- stage: buildAndPushContainers

  jobs:
  - job: getVersion
    steps:
    - bash: |
        imageVersion = git rev-parse --short HEAD
  
  - job: printImageVersion
    dependsOn: getVersion
    steps:
    - bash: 
        echo $(imageVersion)
    

  # - job: buildAndPushRRAppServer
  #   steps:
  #   - bash: |
  #       echo dockerHubRepositoryName = $(dockerHubRepositoryName)
  #       git rev-parse --short HEAD
  #       echo building docker image
  #       echo pushing docker image to repo
  #     displayName: 'build and push rr-app-server'

  # - job: buildAndPushRRAdminCMS
  #   steps:
  #   - bash: |
  #       echo dockerHubRepositoryName = $(dockerHubRepositoryName)
  #       git rev-parse --short HEAD
  #       echo building docker image
  #       echo pushing docker image to repo
  #     displayName: 'build and push rr-admin-cms'

  # - job: buildAndPushRRCloudNativeWeb
  #   steps:
  #   - bash: |
  #       echo dockerHubRepositoryName = $(dockerHubRepositoryName)
  #       git rev-parse --short HEAD
  #       echo building docker image
  #       echo pushing docker image to repo
  #     displayName: 'build and push rr-cloud-native-web'

  # - job: buildAndPushRRContentLayer
  #   steps:
  #   - bash: |
  #       echo dockerHubRepositoryName = $(dockerHubRepositoryName)
  #       git rev-parse --short HEAD
  #       echo building docker image
  #       echo pushing docker image to repo
  #     displayName: 'build and push rr-content-layer'